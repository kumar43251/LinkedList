    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:
        def count(head):
            temp=head
            cnt=0
            while temp:
                cnt+=1
                temp=temp.next
            return cnt
        l1=count(headA)
        l2=count(headB)
        if l1>=l2:
            i=l1-l2
            temp=headA
            while i!=0:
                temp=temp.next
                i-=1
            while temp!=None and headB!=None:
                if temp==headB:
                    return temp
                temp=temp.next
                headB=headB.next
            return None
        else:
            i=l2-l1
            temp=headB
            while i!=0:
                temp=temp.next
                i-=1
            while temp!=None and headA!=None:
                if temp==headA:
                    return temp
                temp=temp.next
                headA=headA.next
            return None